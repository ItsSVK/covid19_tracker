{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/CardData.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/CopyRightText/CopyRightText.jsx","App.js","index.js","components/CopyRightText/CopyRightText.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","CardData","data","lastUpdate","message","title","cardColor","Grid","item","component","Card","className","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","confirmed","recovered","deaths","container","xs","md","value","infected","url","fetchData","country","a","changeableurl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","CopyRightText","link","rel","href","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f773334c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__ZjK3U\",\"card\":\"Cards_card__tMGej\",\"infected\":\"Cards_infected__B8k5A\",\"recovered\":\"Cards_recovered__2i7SE\",\"deaths\":\"Cards_deaths__1cWo0\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst CardData = ({ data, lastUpdate, message, title, cardColor }) => (\r\n  <Grid item component={Card} className={cx(styles.card, cardColor)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\">\r\n        <CountUp start={0} end={data} duration={2.5} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{message}</Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardData;\r\n","import React from \"react\";\r\nimport CardData from \"./CardData\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <CardData\r\n        xs={12}\r\n        md={3}\r\n        data={confirmed.value}\r\n        lastUpdate={lastUpdate}\r\n        message=\"Number of Active Cases of Covid-19\"\r\n        title=\"Infected\"\r\n        cardColor={styles.infected}\r\n      />\r\n      <CardData\r\n        xs={12}\r\n        md={3}\r\n        data={recovered.value}\r\n        lastUpdate={lastUpdate}\r\n        message=\"Number of Recoveries from Covid-19\"\r\n        title=\"Recovered\"\r\n        cardColor={styles.recovered}\r\n      />\r\n      <CardData\r\n        xs={12}\r\n        md={3}\r\n        data={deaths.value}\r\n        lastUpdate={lastUpdate}\r\n        message=\"Number of Deaths caused by Covid-19\"\r\n        title=\"Deaths\"\r\n        cardColor={styles.deaths}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableurl = url;\r\n  if (country) {\r\n    changeableurl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableurl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nfunction Chart({ data: { confirmed, recovered, deaths }, country }) {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    // console.log(dailyData);\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nfunction CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CopyRightText.module.css\";\r\n\r\nfunction CopyRightText() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography color=\"textSecondary\">\r\n        Developed By Shouvik Mohanta, Datas are taken from{\" \"}\r\n        <a\r\n          className={styles.link}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://covid19.mathdro.id/api\"\r\n        >\r\n          COVID19 MATHDRO\r\n        </a>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CopyRightText;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker, CopyRightText } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImage from \"./images/image.png\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n        <CopyRightText />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CopyRightText_container__2Mu7j\",\"link\":\"CopyRightText_link__3oh06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__EMyRw\",\"image\":\"App_image__1VEbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__IqfJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__26eHz\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}